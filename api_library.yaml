openapi: 3.0.3
info:
  title: API Library
  version: 1.0.0
  description: API REST para gestionar una biblioteca
servers:
  - url: http://localhost:8082

paths:
  /users:
    get:
      summary: Obtener todos los usuarios
      responses:
        '200':
          description: Lista de usuarios
    post:
      summary: Crear un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Usuario creado

  /users/{id}:
    get:
      summary: Obtener un usuario por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Usuario encontrado
        '404':
          description: Usuario no encontrado
    put:
      summary: Actualizar un usuario
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Usuario actualizado
    patch:
      summary: Actualizar parcialmente un usuario
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Usuario actualizado parcialmente
    delete:
      summary: Eliminar un usuario
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Usuario eliminado

  /book-categories:
    get:
      summary: Obtener todas las categorías
      responses:
        '200':
          description: Lista de categorías
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookCategory'
    post:
      summary: Crear una nueva categoría
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookCategory'
      responses:
        '201':
          description: Categoría creada

  /book-categories/{id}:
    get:
      summary: Obtener una categoría por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Categoría encontrada
    put:
      summary: Actualizar una categoría
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookCategory'
      responses:
        '200':
          description: Categoría actualizada
    patch:
      summary: Actualizar parcialmente una categoría
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Categoría actualizada parcialmente
    delete:
      summary: Eliminar una categoría
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Categoría eliminada

components:
  schemas:
    User:
      type: object
      required:
        - name
        - username
        - email
        - password
      properties:
        id:
          type: integer
        name:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string
        creationDate:
          type: string
          format: date
        active:
          type: boolean

    BookCategory:
      type: object
      required:
        - name
        - description
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        active:
          type: boolean
        createdDate:
          type: string
          format: date
        numberBooks:
          type: integer
