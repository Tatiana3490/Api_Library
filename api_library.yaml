openapi: 3.0.3
info:
  title: API Library
  version: 1.0.0
  description: API REST para gestionar una biblioteca
servers:
  - url: http://localhost:8082

paths:
  /users:
    get:
      summary: Obtener todos los usuarios
      responses:
        '200':
          description: Lista de usuarios
    post:
      summary: Crear un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Usuario creado

  /users/{id}:
    get:
      summary: Obtener un usuario por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Usuario encontrado
        '404':
          description: Usuario no encontrado
    put:
      summary: Actualizar un usuario
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Usuario actualizado
    patch:
      summary: Actualizar parcialmente un usuario
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Usuario actualizado parcialmente
    delete:
      summary: Eliminar un usuario
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Usuario eliminado

  /books:
    get:
      summary: Obtener todos los libros
      responses:
        '200':
          description: Lista de libros
    post:
      summary: Crear un nuevo libro
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: Libro creado

  /books/{id}:
    get:
      summary: Obtener un libro por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Libro encontrado
    put:
      summary: Actualizar un libro
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Libro actualizado
    patch:
      summary: Actualizar parcialmente un libro
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Libro actualizado parcialmente
    delete:
      summary: Eliminar un libro
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Libro eliminado

  /authors:
    get:
      summary: Obtener todos los autores
      responses:
        '200':
          description: Lista de autores
    post:
      summary: Crear un nuevo autor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '201':
          description: Autor creado

  /authors/{id}:
    get:
      summary: Obtener un autor por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Autor encontrado
    put:
      summary: Actualizar un autor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '200':
          description: Autor actualizado
    patch:
      summary: Actualizar parcialmente un autor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Autor actualizado parcialmente
    delete:
      summary: Eliminar un autor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Autor eliminado

  /loans:
    get:
      summary: Obtener todos los préstamos
      responses:
        '200':
          description: Lista de préstamos
    post:
      summary: Crear un nuevo préstamo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
      responses:
        '201':
          description: Préstamo creado

  /loans/{id}:
    get:
      summary: Obtener un préstamo por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Préstamo encontrado
    put:
      summary: Actualizar un préstamo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
      responses:
        '200':
          description: Préstamo actualizado
    patch:
      summary: Actualizar parcialmente un préstamo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Préstamo actualizado parcialmente
    delete:
      summary: Eliminar un préstamo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Préstamo eliminado

components:
  schemas:
    User:
      type: object
      required: [name, username, email, password]
      properties:
        id:
          type: integer
        name:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string
        creationDate:
          type: string
          format: date
        active:
          type: boolean

    Book:
      type: object
      required: [title, pages]
      properties:
        id:
          type: integer
        title:
          type: string
        genre:
          type: string
        pages:
          type: integer
        price:
          type: number
        available:
          type: boolean

    Author:
      type: object
      required: [name, surname]
      properties:
        id:
          type: integer
        name:
          type: string
        surname:
          type: string
        birthdate:
          type: string
          format: date
        nationality:
          type: string
        active:
          type: boolean

    Loan:
      type: object
      required: [customerName, loanDate, quantity, book]
      properties:
        id:
          type: integer
        name:
          type: string
        customerName:
          type: string
        email:
          type: string
        loanDate:
          type: string
          format: date
        quantity:
          type: integer
        book:
          $ref: '#/components/schemas/Book'

    BookCategory:
      type: object
      required: [name, description]
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        active:
          type: boolean
        createdDate:
          type: string
          format: date
        numberBooks:
          type: integer
